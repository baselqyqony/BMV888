@model Bee_Project.Areas.ServiceProvider.Models.VMModel.UserVM

@{
    ViewBag.Title = "Profile";
   
}

<h2>User Profile</h2>




@using (Html.BeginForm("EditUserProfile", "ServiceProvider", FormMethod.Post, new { id = "demoform", name = "demoform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CountryID, new SelectList(Model.Countries, "Id", "Name"), "Select Cateory Type", new { @id = "countries", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CountryID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityID, htmlAttributes: new {  @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(m => m.CityID, new SelectList(Enumerable.Empty<SelectListItem>(), "ID", "Name"), "Select Cateory Type", new { @id = "Cities", @class = "form-control" })
               @Html.ValidationMessageFor(m => m.CityID)
            </div>
        <div class="form-group">
            @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Floornumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Floornumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Floornumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DoorNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DoorNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DoorNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
        </div>
}
<div>

    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        $("#countries").change(function () {
            var SelCat = $("#countries").val();
            if (SelCat != 0) {
                var url = '@Url.Action("GetCityByStaeId", "Serviceprovider", new { Area = "Serviceprovider" })';
                $.post(url, { stateid: SelCat },
                function (data) {
                    var citiesDropdown = $("#Cities");
                    citiesDropdown.empty();
                    for (var i = 0; i < data.length; i++) {
                        citiesDropdown.append('<option value?+data[i].id+?="">' + data[i].name + '</option>');
                    }
                });

            }
            else {


            }
        });
    });
</script>



    @Scripts.Render("~/bundles/jqueryval")
}
