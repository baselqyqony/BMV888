@model Bee_Project.Areas.Customer.Models.VSearchModel

@{
    ViewBag.Title = "search";
    Layout = "~/Areas/Customer/Views/Shared/_Layout.cshtml";
}

<h2>search</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>VSearchModel</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.metaDatas, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.metaDatas)
                @Html.ValidationMessageFor(model => model.metaDatas)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Cities, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.selectedCity, Model.Cities, "select City")
                @Html.ValidationMessageFor(model => model.Cities)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Countries, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.selectedCountry, Model.Countries, "select Country")
                @Html.ValidationMessageFor(model => model.Countries)
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTypes, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.selectedServiceType, Model.ServiceTypes, "select Service Type")
                @Html.ValidationMessageFor(model => model.ServiceTypes)
            </div>
        </div>
        <script type="text/javascript" src="mapsGUI.js"></script>
        
        <div class="form-group">
            @Html.LabelFor(model => model.longitude, new { @class = "control-label col-md-2", @onchange = "alert('hi')" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.longitude)
                @Html.ValidationMessageFor(model => model.longitude)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.altitude, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.altitude)
                @Html.ValidationMessageFor(model => model.altitude)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isNearBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isNearBy)
                @Html.ValidationMessageFor(model => model.isNearBy)
            </div>
        </div>

        
        <div id="map"></div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script src="~/Scripts/staticLocation.js"></script>
<script> setLocation('altitude', 'longitude') </script>
<script src="~/Scripts/mapsGUI.js"></script>
<script type="text/javascript">startMapPlugin('altitude', 'longitude', true)</script>

